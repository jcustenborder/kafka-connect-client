{
  "requests" : [ {
    "body" : {
      "connector.class" : "io.confluent.connect.activemq.ActiveMQSourceConnector",
      "tasks.max" : "1"
    },
    "metadata" : {
      "headers" : {
        "Accept" : "application/json"
      },
      "method" : "PUT",
      "path" : "/connector-plugins/io.confluent.connect.activemq.ActiveMQSourceConnector/config/validate"
    }
  } ],
  "responses" : [ {
    "metadata" : {
      "headers" : {
        "Content-Type" : "application/json"
      },
      "statusCode" : 200
    },
    "body" : {
      "name": "io.confluent.connect.activemq.ActiveMQSourceConnector",
      "error_count": 5,
      "groups": [
        "Common",
        "Transforms",
        "Error Handling",
        "ActiveMQ Connection",
        "ActiveMQ Session",
        "Kafka",
        "Confluent Platform"
      ],
      "configs": [
        {
          "definition": {
            "name": "name",
            "type": "STRING",
            "required": true,
            "default_value": null,
            "importance": "HIGH",
            "documentation": "Globally unique name to use for this connector.",
            "group": "Common",
            "width": "MEDIUM",
            "display_name": "Connector name",
            "dependents": [],
            "order": 1
          },
          "value": {
            "name": "name",
            "value": null,
            "recommended_values": [],
            "errors": [
              "Missing required configuration \"name\" which has no default value."
            ],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "connector.class",
            "type": "STRING",
            "required": true,
            "default_value": null,
            "importance": "HIGH",
            "documentation": "Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \"FileStreamSink\" or \"FileStreamSinkConnector\" to make the configuration a bit shorter",
            "group": "Common",
            "width": "LONG",
            "display_name": "Connector class",
            "dependents": [],
            "order": 2
          },
          "value": {
            "name": "connector.class",
            "value": "io.confluent.connect.activemq.ActiveMQSourceConnector",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "tasks.max",
            "type": "INT",
            "required": false,
            "default_value": "1",
            "importance": "HIGH",
            "documentation": "Maximum number of tasks to use for this connector.",
            "group": "Common",
            "width": "SHORT",
            "display_name": "Tasks max",
            "dependents": [],
            "order": 3
          },
          "value": {
            "name": "tasks.max",
            "value": "1",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "key.converter",
            "type": "CLASS",
            "required": false,
            "default_value": null,
            "importance": "LOW",
            "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the keys in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
            "group": "Common",
            "width": "SHORT",
            "display_name": "Key converter class",
            "dependents": [],
            "order": 4
          },
          "value": {
            "name": "key.converter",
            "value": null,
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "value.converter",
            "type": "CLASS",
            "required": false,
            "default_value": null,
            "importance": "LOW",
            "documentation": "Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro.",
            "group": "Common",
            "width": "SHORT",
            "display_name": "Value converter class",
            "dependents": [],
            "order": 5
          },
          "value": {
            "name": "value.converter",
            "value": null,
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "header.converter",
            "type": "CLASS",
            "required": false,
            "default_value": null,
            "importance": "LOW",
            "documentation": "HeaderConverter class used to convert between Kafka Connect format and the serialized form that is written to Kafka. This controls the format of the header values in messages written to or read from Kafka, and since this is independent of connectors it allows any connector to work with any serialization format. Examples of common formats include JSON and Avro. By default, the SimpleHeaderConverter is used to serialize header values to strings and deserialize them by inferring the schemas.",
            "group": "Common",
            "width": "SHORT",
            "display_name": "Header converter class",
            "dependents": [],
            "order": 6
          },
          "value": {
            "name": "header.converter",
            "value": null,
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "transforms",
            "type": "LIST",
            "required": false,
            "default_value": "",
            "importance": "LOW",
            "documentation": "Aliases for the transformations to be applied to records.",
            "group": "Transforms",
            "width": "LONG",
            "display_name": "Transforms",
            "dependents": [],
            "order": 7
          },
          "value": {
            "name": "transforms",
            "value": "",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "config.action.reload",
            "type": "STRING",
            "required": false,
            "default_value": "restart",
            "importance": "LOW",
            "documentation": "The action that Connect should take on the connector when changes in external configuration providers result in a change in the connector's configuration properties. A value of 'none' indicates that Connect will do nothing. A value of 'restart' indicates that Connect should restart/reload the connector with the updated configuration properties.The restart may actually be scheduled in the future if the external configuration provider indicates that a configuration value will expire in the future.",
            "group": "Common",
            "width": "MEDIUM",
            "display_name": "Reload Action",
            "dependents": [],
            "order": 8
          },
          "value": {
            "name": "config.action.reload",
            "value": "restart",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "errors.retry.timeout",
            "type": "LONG",
            "required": false,
            "default_value": "0",
            "importance": "MEDIUM",
            "documentation": "The maximum duration in milliseconds that a failed operation will be reattempted. The default is 0, which means no retries will be attempted. Use -1 for infinite retries.",
            "group": "Error Handling",
            "width": "MEDIUM",
            "display_name": "Retry Timeout for Errors",
            "dependents": [],
            "order": 1
          },
          "value": {
            "name": "errors.retry.timeout",
            "value": "0",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "errors.retry.delay.max.ms",
            "type": "LONG",
            "required": false,
            "default_value": "60000",
            "importance": "MEDIUM",
            "documentation": "The maximum duration in milliseconds between consecutive retry attempts. Jitter will be added to the delay once this limit is reached to prevent thundering herd issues.",
            "group": "Error Handling",
            "width": "MEDIUM",
            "display_name": "Maximum Delay Between Retries for Errors",
            "dependents": [],
            "order": 2
          },
          "value": {
            "name": "errors.retry.delay.max.ms",
            "value": "60000",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "errors.tolerance",
            "type": "STRING",
            "required": false,
            "default_value": "none",
            "importance": "MEDIUM",
            "documentation": "Behavior for tolerating errors during connector operation. 'none' is the default value and signals that any error will result in an immediate connector task failure; 'all' changes the behavior to skip over problematic records.",
            "group": "Error Handling",
            "width": "SHORT",
            "display_name": "Error Tolerance",
            "dependents": [],
            "order": 3
          },
          "value": {
            "name": "errors.tolerance",
            "value": "none",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "errors.log.enable",
            "type": "BOOLEAN",
            "required": false,
            "default_value": "false",
            "importance": "MEDIUM",
            "documentation": "If true, write each error and the details of the failed operation and problematic record to the Connect application log. This is 'false' by default, so that only errors that are not tolerated are reported.",
            "group": "Error Handling",
            "width": "SHORT",
            "display_name": "Log Errors",
            "dependents": [],
            "order": 4
          },
          "value": {
            "name": "errors.log.enable",
            "value": "false",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "errors.log.include.messages",
            "type": "BOOLEAN",
            "required": false,
            "default_value": "false",
            "importance": "MEDIUM",
            "documentation": "Whether to the include in the log the Connect record that resulted in a failure. This is 'false' by default, which will prevent record keys, values, and headers from being written to log files, although some information such as topic and partition number will still be logged.",
            "group": "Error Handling",
            "width": "SHORT",
            "display_name": "Log Error Details",
            "dependents": [],
            "order": 5
          },
          "value": {
            "name": "errors.log.include.messages",
            "value": "false",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "activemq.url",
            "type": "STRING",
            "required": true,
            "default_value": null,
            "importance": "HIGH",
            "documentation": "The URL of the ActiveMQ broker.",
            "group": "ActiveMQ Connection",
            "width": "LONG",
            "display_name": "Message Selector",
            "dependents": [],
            "order": 1
          },
          "value": {
            "name": "activemq.url",
            "value": null,
            "recommended_values": [],
            "errors": [
              "Missing required configuration \"activemq.url\" which has no default value."
            ],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "activemq.username",
            "type": "STRING",
            "required": false,
            "default_value": "",
            "importance": "HIGH",
            "documentation": "The username to use when connecting to ActiveMQ.",
            "group": "ActiveMQ Connection",
            "width": "MEDIUM",
            "display_name": "Username",
            "dependents": [],
            "order": 2
          },
          "value": {
            "name": "activemq.username",
            "value": "",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "activemq.password",
            "type": "PASSWORD",
            "required": false,
            "default_value": "[hidden]",
            "importance": "HIGH",
            "documentation": "The password to use when connecting to ActiveMQ.",
            "group": "ActiveMQ Connection",
            "width": "MEDIUM",
            "display_name": "Password",
            "dependents": [],
            "order": 3
          },
          "value": {
            "name": "activemq.password",
            "value": "[hidden]",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "jms.destination.name",
            "type": "STRING",
            "required": true,
            "default_value": null,
            "importance": "HIGH",
            "documentation": "The name of the JMS destination (queue or topic) to read from.",
            "group": "ActiveMQ Session",
            "width": "LONG",
            "display_name": "Destination Name",
            "dependents": [],
            "order": 1
          },
          "value": {
            "name": "jms.destination.name",
            "value": null,
            "recommended_values": [],
            "errors": [
              "Missing required configuration \"jms.destination.name\" which has no default value."
            ],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "jms.destination.type",
            "type": "STRING",
            "required": false,
            "default_value": "queue",
            "importance": "HIGH",
            "documentation": "The type of JMS destination, which is either `queue` or `topic`.",
            "group": "ActiveMQ Session",
            "width": "MEDIUM",
            "display_name": "Destination Type",
            "dependents": [],
            "order": 2
          },
          "value": {
            "name": "jms.destination.type",
            "value": "queue",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "batch.size",
            "type": "INT",
            "required": false,
            "default_value": "1024",
            "importance": "LOW",
            "documentation": "The maximum number of records that a connector task may read from the JMS broker before writing to Kafka. The task holds these records until they are acknowledged in Kafka, so this may affect memory usage.",
            "group": "ActiveMQ Session",
            "width": "MEDIUM",
            "display_name": "Batch Size",
            "dependents": [],
            "order": 3
          },
          "value": {
            "name": "batch.size",
            "value": "1024",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "max.pending.messages",
            "type": "INT",
            "required": false,
            "default_value": "4096",
            "importance": "LOW",
            "documentation": "The maximum number of messages per task that can be received from JMS brokers and produced to Kafka before the task acknowledges the JMS session/messages. If the task fails and is restarted, this is the maximum number of JMS messages the task may duplicate in Kafka. This is typically set larger than ``batch.size``. A smaller value than ``batch.size`` limits the size of the batches.",
            "group": "ActiveMQ Session",
            "width": "MEDIUM",
            "display_name": "Unacknowledged Messages Limit",
            "dependents": [],
            "order": 4
          },
          "value": {
            "name": "max.pending.messages",
            "value": "4096",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "max.poll.duration",
            "type": "INT",
            "required": false,
            "default_value": "60000",
            "importance": "LOW",
            "documentation": "The maximum amount of time each task can build a batch. The batch is closed and sent to Kafka if not enough messages are read during the time allotted. This helps limit connector lag when the JMS queue/topic has a lower throughput.",
            "group": "ActiveMQ Session",
            "width": "MEDIUM",
            "display_name": "Maximum time to wait for a single poll in milliseconds.",
            "dependents": [],
            "order": 5
          },
          "value": {
            "name": "max.poll.duration",
            "value": "60000",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "jms.message.selector",
            "type": "STRING",
            "required": false,
            "default_value": "",
            "importance": "HIGH",
            "documentation": "The `message selector <http://docs.oracle.com/javaee/6/api/javax/jms/Session.html#createConsumer(javax.jms.Destination, java.lang.String, boolean)>`_ that should be applied to messages in the destination.",
            "group": "ActiveMQ Session",
            "width": "LONG",
            "display_name": "Message Selector",
            "dependents": [],
            "order": 6
          },
          "value": {
            "name": "jms.message.selector",
            "value": "",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "kafka.topic",
            "type": "STRING",
            "required": true,
            "default_value": null,
            "importance": "HIGH",
            "documentation": "The name of the Kafka topic where the connector writes all records that were read from the JMS broker.",
            "group": "Kafka",
            "width": "LONG",
            "display_name": "Kafka Topic",
            "dependents": [],
            "order": 1
          },
          "value": {
            "name": "kafka.topic",
            "value": null,
            "recommended_values": [],
            "errors": [
              "Missing required configuration \"kafka.topic\" which has no default value."
            ],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "use.permissive.schema",
            "type": "BOOLEAN",
            "required": false,
            "default_value": "false",
            "importance": "LOW",
            "documentation": "Whether to use a more permissive schema with an optional messageID in the key and value. Defaults to ``false`` for compatibility with the old strict schema. If your JMS messages have null message IDs, then you must set this to ``true``.",
            "group": "Kafka",
            "width": "SHORT",
            "display_name": "Permissive Schema",
            "dependents": [],
            "order": 2
          },
          "value": {
            "name": "use.permissive.schema",
            "value": "false",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "confluent.license",
            "type": "STRING",
            "required": false,
            "default_value": "",
            "importance": "HIGH",
            "documentation": "Confluent will issue a license key to each subscriber. The license key will be a short snippet of text that you can copy and paste. Without the license key, you can use the connector for a 30-day trial period. If you are a subscriber, please contact Confluent Support for more information.",
            "group": "Confluent Platform",
            "width": "NONE",
            "display_name": "License",
            "dependents": [],
            "order": 1
          },
          "value": {
            "name": "confluent.license",
            "value": "",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "confluent.topic.bootstrap.servers",
            "type": "LIST",
            "required": true,
            "default_value": null,
            "importance": "HIGH",
            "documentation": "A list of host/port pairs to use for establishing the initial connection to the Kafka cluster used for licensing. All servers in the cluster will be discovered from the initial connection. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).",
            "group": "Confluent Platform",
            "width": "LONG",
            "display_name": "Confluent Topic Servers",
            "dependents": [],
            "order": 2
          },
          "value": {
            "name": "confluent.topic.bootstrap.servers",
            "value": null,
            "recommended_values": [],
            "errors": [
              "Missing required configuration \"confluent.topic.bootstrap.servers\" which has no default value."
            ],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "confluent.topic",
            "type": "STRING",
            "required": false,
            "default_value": "_confluent-command",
            "importance": "LOW",
            "documentation": "Name of the Kafka topic used for Confluent Platform configuration, including licensing information.",
            "group": "Confluent Platform",
            "width": "MEDIUM",
            "display_name": "Confluent Topic",
            "dependents": [],
            "order": 3
          },
          "value": {
            "name": "confluent.topic",
            "value": "_confluent-command",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        },
        {
          "definition": {
            "name": "confluent.topic.replication.factor",
            "type": "INT",
            "required": false,
            "default_value": "3",
            "importance": "LOW",
            "documentation": "The replication factor for the Kafka topic used for Confluent Platform configuration, including licensing information. This is used only if the topic does not already exist, and the default of 3 is appropriate for production use. If you are using a development environment with less than 3 brokers, you must set this to the number of brokers (often 1).",
            "group": "Confluent Platform",
            "width": "MEDIUM",
            "display_name": "Confluent Topic Replication Factor",
            "dependents": [],
            "order": 4
          },
          "value": {
            "name": "confluent.topic.replication.factor",
            "value": "3",
            "recommended_values": [],
            "errors": [],
            "visible": true
          }
        }
      ]
    }
  } ]
}